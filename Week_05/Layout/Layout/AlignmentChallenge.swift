
import SwiftUI

struct AlignmentChallenge: View {
    var body: some View {
        List(Raz√©mon.all, id: \.name) { raz√©mon in
            HStack(alignment: .raz√©mon) {
                Image(raz√©mon.name)
                    .resizable()
                    .scaledToFit()
                    .frame(width: 120)
                    .alignmentGuide(.raz√©mon) {
                        raz√©mon.eyePosition * $0[.bottom]
                    }
                
                VStack(alignment: .leading, spacing: 15) {
                    Text(raz√©mon.name)
                        .fontWeight(.heavy)
                    
                    Text(raz√©mon.description)
                        .alignmentGuide(.raz√©mon,
                                        computeValue: Raz√©mon.defaultValue
                                        )
                    
                    Text("üíé \(raz√©mon.cost)")
                        .fontWeight(.semibold)
                        .foregroundColor(.blue)
                }
                
            }
        }
    }
}

extension Raz√©mon: AlignmentID {
    static func defaultValue(in context: ViewDimensions) -> CGFloat {
        context[.top]
    }
}

extension VerticalAlignment {
    static let raz√©mon = Self(Raz√©mon.self)
}

struct AlignmentChallenge_Previews: PreviewProvider {
    static var previews: some View {
        AlignmentChallenge()
    }
}
